plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'

group 'io.reactivex.swt'
version = '0.1.0'

import org.apache.tools.ant.taskdefs.condition.Os

final def ECLIPSE_WS = Os.isFamily(Os.FAMILY_UNIX) ? 'gtk' : Os.isFamily(Os.FAMILY_WINDOWS) ? 'win32' : Os.isFamily(Os.FAMILY_MAC) ? 'cocoa' : null

final def ECLIPSE_OS = Os.isFamily(Os.FAMILY_UNIX) ? 'linux' : Os.isFamily(Os.FAMILY_WINDOWS) ? 'win32' : Os.isFamily(Os.FAMILY_MAC) ? 'macosx': null

final def ECLIPSE_ARCH = System.properties['os.arch'].contains('64') ? 'x86_64' : 'x86'

final def swtPluginId = "org.eclipse.swt.${ECLIPSE_WS}.${ECLIPSE_OS}.${ECLIPSE_ARCH}"

dependencies {

	compile (group: 'org.eclipse.platform', name: "${swtPluginId}", version: '3.105.2') {
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.ppc64'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.win32.win32.x86_64'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.win32.win32.x86'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.s390'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.aarch64'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.x86_64'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.aix.ppc'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.aix.ppc64'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.solaris.x86_64'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.ppc64le'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.cocoa.macosx.x86_64'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.solaris.sparcv9'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.ppc'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.hpux.ia64'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.x86'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.arm'
		 exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.gtk.linux.s390x'
	}

	compile 'io.reactivex.rxjava2:rxjava:2.0.6'

	// Use JUnit test framework
	testImplementation 'junit:junit:4.12'
}

jar.doFirst {
    manifest {
        def manifestFile = "${projectDir}/META-INF/MANIFEST.MF"
        if ( new File( manifestFile ).exists() )
            from ( manifestFile )

        attributes 'Build-date': new Date();
        attributes 'Application-Version': project.version
    }
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "simon-scholz"
            name "Simon Scholz"
            email "simon.scholz@vogella.com"
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
	publications {
		RxSWT(MavenPublication) {
			from components.java
 			artifact sourcesJar
 			artifact javadocJar
            groupId 'io.reactivex.swt'
    		artifactId 'rxswt'
    		version '0.1.0'
    		pom.withXml {
                def root = asNode()
                root.appendNode('description', 'RxSWT for the usage of RxJava with SWT')
                root.appendNode('name', 'RxSWT')
                root.appendNode('url', 'https://github.com/SimonScholz/RxSWT')
                root.children().last() + pomConfig
            }
		}
	}
}

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	publications = ['RxSWT']
	publish = true
	pkg {
		repo = 'maven'
		name = 'RxSWT'
		userOrg = 'vogellacompany'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/SimonScholz/RxSWT.git'
		githubRepo = 'https://github.com/SimonScholz/RxSWT'
		publicDownloadNumbers = true
		version {
        	name = '0.1.0'
        	desc = 'RxSWT for the usage of RxJava with SWT'
        	released  = new Date()
        	vcsTag = '0.1.0'
 	   }
	}
}

task GCandMem(dependsOn: 'check') {
	doLast{
		System.gc()
	    	Thread.sleep(200)
	    	print("Memory usage: ")
	    	println(java.lang.management.ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed() / 1024.0 / 1024.0)
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
}

jacocoTestReport.dependsOn GCandMem

build.dependsOn jacocoTestReport

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}

